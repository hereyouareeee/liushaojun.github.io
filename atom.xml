<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Brook's Room]]></title>
  <subtitle><![CDATA[一个逼格的程序猿、码农。]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://imjun.me/"/>
  <updated>2016-11-23T05:05:47.000Z</updated>
  <id>http://imjun.me/</id>
  
  <author>
    <name><![CDATA[Shaojun Liu]]></name>
    <email><![CDATA[me@imjun.me]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[IOS抓包工具]]></title>
    <link href="http://imjun.me/2016/11/23/IOS%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7/"/>
    <id>http://imjun.me/2016/11/23/IOS抓包工具/</id>
    <published>2016-11-23T03:52:52.000Z</published>
    <updated>2016-11-23T05:05:47.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>在iOS开发过程中，抓包是常见的必备技能之一。这里我们主要介绍一下Mac下的抓包利器Charles（文中版本：4.0.1）。它可以非常方便的抓取Http/Https请求，从而提高我们的开发效率。本文中不提供破解版安装使用说明（网上一大堆），建议使用正版，官方dmg下载地址：<a href="https://www.charlesproxy.com/download/" target="_blank" rel="external">Charlesproxy</a></p>
</blockquote>
<p>破解版:<br><a href="http://www.waitsun.com/charles-4-0-2.html" target="_blank" rel="external">Charlesproxy</a></p>
<h2 id="如何抓取Http请求？">如何抓取Http请求？</h2><ul>
<li>安装完成之后打开Charles，设置端口号:8888（端口号可以自定义）。</li>
</ul>
<p>选择“Proxy”菜单下的“Proxy Settings”子菜单。打开“Proxy Settings”对话框：<br><img src="http://mmbiz.qpic.cn/mmbiz_jpg/foPACGrddJ003YpewINAGSUfQNKAYEbxzd8HO4wQKRTZicF6oxzLCEibdPdGjBhPDJIibWian96hOtH3Z5MhIO5oqg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p>
<ul>
<li>在“Proxy Settings”对话框中设置端口号:8888，并勾选“Enable transparent Http proxying”</li>
</ul>
<p><img src="http://mmbiz.qpic.cn/mmbiz_jpg/foPACGrddJ003YpewINAGSUfQNKAYEbxBsnwuJTsuGtyMicyhpClEqPuCFaF23BsAakOuAIYB6xWUkLsXOSqXcQ/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p>
<ul>
<li>打开“网络偏好设置”查看电脑IP地址：</li>
</ul>
<p><img src="http://mmbiz.qpic.cn/mmbiz_jpg/foPACGrddJ003YpewINAGSUfQNKAYEbxoUdRE06NTXuS9poOdgMYwEWCaAG72iaDhSFD7gAtt4Zmbh7GWUmeqqw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p>
<ul>
<li><p>设置手机网络（iOS）<br><img src="http://mmbiz.qpic.cn/mmbiz_jpg/foPACGrddJ003YpewINAGSUfQNKAYEbxzBTVNCYVer37xpInVpqn5jSyibK0fMv1r30kp9MROMNMCyqHluFHdiaw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p>
</li>
<li><p>打开需要抓包的手机APP，初次使用时，Charles会弹出确认对话框，直接点击”Allow”按钮后就可以看到对应的请求数据</p>
</li>
</ul>
<p><strong>温馨提示</strong>：抓完包之后，请把手机WiFi中的HTTP代理关闭。不然可能造成iOS无法访问网络。</p>
<h2 id="如何抓取Https请求?">如何抓取Https请求?</h2><ol>
<li>电脑安装SSL证书</li>
</ol>
<p>选中Charles，在“Help”菜单中选择—&gt;“SSL Proxying”—&gt;“Install Charles Root Certificate”会自动打开钥匙串访问窗口<br><img src="http://mmbiz.qpic.cn/mmbiz_png/foPACGrddJ003YpewINAGSUfQNKAYEbxYeb0ibbAX0rib7kNS0pKUN0MmKibB547micH93ZBPXW4FMn2hPqLic7DEFw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">在“钥匙串访问”窗口中找到对应的证书，双击打开。设置“使用证书时”项为：始终信任。<br><img src="http://mmbiz.qpic.cn/mmbiz_png/foPACGrddJ003YpewINAGSUfQNKAYEbxuJiblccDR6ibtMURPp0R6ibFibMw3UJMrtvbjwNqhiaIian1tHOO84mcHfPA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br>填写管理员密码更新设置。<img src="http://mmbiz.qpic.cn/mmbiz_png/foPACGrddJ003YpewINAGSUfQNKAYEbxcrvvIz4ledS8k7nnBNoCDIW2icL6bjEpjaIqonmXouD6gmvAEAFmrMw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p>
<ol>
<li>手机安装证书（使用Safari方式）</li>
</ol>
<p>请确保手机已经设置好手动代理（具体方式参照上面HTTP抓包设置方式）。</p>
<p>在手机Safari浏览器中输入下面的链接地址：<code>http://charlesproxy.com/getssl</code>。手机会自动跳转安装“Charles Proxy SSL Proxying”描述文件。如下图所示：<br><img src="http://mmbiz.qpic.cn/mmbiz_jpg/foPACGrddJ003YpewINAGSUfQNKAYEbx0eh0kVkox6gcibF6nyRrf6dbJDk7byicSicZQdyHa7O9MlrlRkEEvSPRw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">点击“安装”按钮，会提示输入手机密码，然后确认安装。<br><img src="http://mmbiz.qpic.cn/mmbiz_jpg/foPACGrddJ003YpewINAGSUfQNKAYEbxp1RTrdy3icawiaXF8Ta1bpxqKo98B7eFOtaMqwibTNuwdW7SLMcBxgk9g/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">以上便完成手机SSL证书安装步骤。</p>
<ol>
<li>在Charles工具栏上点击设置按钮，选择“SSL Proxying Settings…”</li>
</ol>
<p>打开“SSL Proxying Settings”对话框</p>
<p><img src="http://mmbiz.qpic.cn/mmbiz_jpg/foPACGrddJ003YpewINAGSUfQNKAYEbxVPFhbl6z5UzkHuAalic4CJsfKyx8ko7AxGVZ38u1PKedGrRWA7tOwaw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br>点击“Add”添加：Host中输入*表示匹配所有主机。https默认端口号：443<br><img src="http://mmbiz.qpic.cn/mmbiz_jpg/foPACGrddJ003YpewINAGSUfQNKAYEbxXJNBVXLmvalKClf7HeJOiajnXdAr4RvejXicIqHxsg2zo9yhNxmicRVqg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br>添加完成显示结果如下<br><img src="http://mmbiz.qpic.cn/mmbiz_jpg/foPACGrddJ003YpewINAGSUfQNKAYEbxU5HRpOricelNSYGLUWGlaOLMzFVB0EV6cj0a7ZibZib34KTgvibjiay4G9g/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p>
<ol>
<li>测试</li>
</ol>
<ul>
<li><p>安装手机证书之前测试结果如下图所示<br><img src="http://mmbiz.qpic.cn/mmbiz_jpg/foPACGrddJ003YpewINAGSUfQNKAYEbxDic8ibNgKXicbXibRhE5dw7PicQFJ55DZJzY5zylSkwusfqK7zz5syRmpzQ/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p>
</li>
<li><p>安装手机证书之后测试结果如下图所示：<br><img src="http://mmbiz.qpic.cn/mmbiz_jpg/foPACGrddJ003YpewINAGSUfQNKAYEbx6j7Xjf7dDkFEAHZ9icDpv17J04Gh7LmhPGyYKskHO6MHBexfViatSLUg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p>
</li>
</ul>
<p>针对Charles代理访问https有些正常有些失败的处理方法（一般https只要打开charles 的”Enable SSL Proxying”代理就能访问）</p>
<h2 id="如果没有Wifi，我们还可以这样抓包？（本文不做详解）">如果没有Wifi，我们还可以这样抓包？（本文不做详解）</h2><ol>
<li>抓包之rvictl方式</li>
</ol>
<ul>
<li>开启虚拟端口：<code>rvictl -s</code></li>
<li>关闭虚拟端口：<code>rvictl -x</code></li>
<li>然后使用<code>wireshark</code>来捕捉这个端口数据。</li>
</ul>
<ol>
<li>抓包之tcpdump方式<br>有个很大的缺点是手机需要越狱。</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>在iOS开发过程中，抓包是常见的必备技能之一。这里我们主要介绍一下Mac下的抓包利器Charles（文中版本：4.0.1）。它可以非常方便的抓取Http/Https请求，从而提高我们的开发效率。本文中不提供破解版安装使用说明（网上一大堆），建议使用]]>
    </summary>
    
      <category term="https" scheme="http://imjun.me/tags/https/"/>
    
      <category term="ios" scheme="http://imjun.me/tags/ios/"/>
    
      <category term="工具" scheme="http://imjun.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[zookeeper教程]]></title>
    <link href="http://imjun.me/2016/07/27/zookeeper%E6%95%99%E7%A8%8B/"/>
    <id>http://imjun.me/2016/07/27/zookeeper教程/</id>
    <published>2016-07-27T02:07:53.000Z</published>
    <updated>2016-07-27T02:37:40.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Zookeeper_教程">Zookeeper 教程</h1><hr>
<blockquote>
<p>zookeeper 是一个开源的分布式协调服务，由知名互联网公司雅虎公司创建，是Google Chubby 开源实现。 他致力于提供一个高性能，高可用，且具有严格的顺序访问控制能力的分布式协调服务。分布式应用可以基于诸如数据发布/订阅、负载均衡、命名服务、分布式协调/通知，集群管理、Master选举、分布式锁和分布式队列。</p>
</blockquote>
<h2 id="基本概念">基本概念</h2><h2 id="zookeeper_应用场景">zookeeper 应用场景</h2><h3 id="数据的发布、订阅">数据的发布、订阅</h3><p>一方可以发布数据另一方接受数据</p>
<p>通常数据的订阅、发布 有两种方式：push / pull<br>zk 采用两种方式相结合</p>
<p>发布者将数据发布到集群的节点上，订阅者通过一定的方法告诉服务器，我对那个节点的数据感兴趣，那个服务器在这些节点的数据发生变化时，就通知客户端，客户端得到通知后就可以去服务端获取数据</p>
<h3 id="负载均衡">负载均衡</h3><h3 id="DB">DB</h3><ol>
<li>首先DB在启动的是先把自己在zk 注册成一个临时的节点，zk的节点有两种一种是永久节点，另一种是临时节点。临时节点在服务器出现问题的时候，节点会自动从zk上删除，那么这样zk上的服务器列表是最新的可用的列表</li>
<li>客户端需要读写数据库的时候首先去zk得到所有可用的DB连接信息（一张列表）</li>
<li>客户端随机选择一台进行连接</li>
<li>当客户端发现连接的时候再次从zk上获取可用的DB信息，当然也可以在刚获取的那个列表里移除掉不可用的连接后再选择一个DB连接</li>
</ol>
<h3 id="命名服务">命名服务</h3><pre><code>顾名思义就是提供名称服务，例如数据库表格ID，一般有两种ID，一种是分布式中使用的，一种是自增长的ID，U<span class="built_in">UID</span> 可以在分布式中使用但由于没有规律较难理解，友好性不好，我们可以使用zk来生成一个顺序增长的，可以在集群环境下使用。
</code></pre><h3 id="分布式协调/通知">分布式协调/通知</h3><p>心跳检测<br>在分布式系统中，我们常常需要知道某个服务器是否可用，传统开发中，可以通过ping 某个主机。zk 中我们让所有机器都注册到一个临时节点，我们判断一个机器是否可用，我们只需判断这个节点zk是否存在就可以了，不需要直接去连接需要检查的机器，降低系统的复杂度。</p>
<h2 id="环境搭建">环境搭建</h2><ol>
<li><p>安装</p>
<p>  <code>wget http://mirrors.hust.edu.cn/apache/zookeeper/zookeeper-3.3.6/</code></p>
</li>
<li><p>解压</p>
<p>   <code>tar zxf zookeeper-3.3.6  &amp;&amp; mv zookeeper-3.3.6 /usr/local/zookeeper</code></p>
</li>
<li><p>配置</p>
<p>  <code>vi /usr/local/&lt;zookeeper&gt;/conf/zoo.cnf</code></p>
</li>
</ol>
<pre><code><span class="comment"><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line"><span class="title">server</span><span class="number">.1</span>=host:<span class="foreign"><span class="keyword">port</span>:<span class="keyword">port</span>-leader </span></span><br><span class="line">         </span><br><span class="line"><span class="title">server</span><span class="number">.2</span>=host:<span class="foreign"><span class="keyword">port</span>:<span class="keyword">port</span>-leader   </span></span><br><span class="line">         </span><br><span class="line"><span class="title">server</span><span class="number">.3</span>=host:<span class="foreign"><span class="keyword">port</span>:<span class="keyword">port</span>-leader </span></span><br><span class="line"><span class="title">touch</span> myid &amp;&amp; echo <span class="string">"&lt;id&gt;"</span> &gt; myid</span><br></pre></td></tr></table></figure></span>
</code></pre><ol>
<li><p>启动/停止</p>
<p>  <code>./zkServer start | stop</code></p>
</li>
<li><p>客户端连接<br>  <code>./zkCli</code></p>
</li>
</ol>
<h2 id="master选举">master选举</h2><p><strong>架构图</strong>:<br><img src="https://dn-imjun.qbox.me/2016-07-25 11-10-26.jpg" alt=""><br><strong>程序流程图:</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-11-03.jpg" alt=""><br><strong>网络抖动:</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-11-41.jpg" alt=""><br><strong>核心类图:</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-12-08.jpg" alt=""></p>
<p>master 节点何时会删除</p>
<ol>
<li><p>master 会主动放权</p>
</li>
<li><p>master 节点down机</p>
</li>
<li><p>master 节点网络斗动，会发生新一轮选举</p>
</li>
<li><p>如果master 和上一轮选举的master 不是同一个节点，不一致时发生资源迁移</p>
</li>
</ol>
<p>优化：让上一轮选举出的master 再新一轮选举中优先采用master 节点</p>
<p><strong>代码:</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shaojun.zookeeper.mastersel;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.ZkClient;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.serialize.SerializableSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LeaderSelectorZkClient</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="comment">//启动的服务个数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span>        CLIENT_QTY = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">//zookeeper服务器的地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span>  String  ZOOKEEPER_SERVER = <span class="string">"10.3.1.11:2181,10.3.1.11:2182,10.3.1.11:2183"</span>;</span><br><span class="line">    </span><br><span class="line">       </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">    </span>&#123;</span><br><span class="line">        <span class="comment">//保存所有zkClient的列表</span></span><br><span class="line">        List&lt;ZkClient&gt;  clients = <span class="keyword">new</span> ArrayList&lt;ZkClient&gt;();</span><br><span class="line">        <span class="comment">//保存所有服务的列表</span></span><br><span class="line">        List&lt;WorkServer&gt;  workServers = <span class="keyword">new</span> ArrayList&lt;WorkServer&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; CLIENT_QTY; ++i )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//创建zkClient</span></span><br><span class="line">                ZkClient client = <span class="keyword">new</span> ZkClient(ZOOKEEPER_SERVER, <span class="number">15000</span>, <span class="number">105000</span>, <span class="keyword">new</span> SerializableSerializer());</span><br><span class="line">                clients.add(client);</span><br><span class="line">                <span class="comment">//创建serverData</span></span><br><span class="line">                RunningData runningData = <span class="keyword">new</span> RunningData();</span><br><span class="line">                runningData.setCid(Long.valueOf(i));</span><br><span class="line">                runningData.setName(<span class="string">"Client #"</span> + i);</span><br><span class="line">                <span class="comment">//创建服务</span></span><br><span class="line">                WorkServer  workServer = <span class="keyword">new</span> WorkServer(runningData);</span><br><span class="line">                workServer.setZkClient(client);</span><br><span class="line">                </span><br><span class="line">                workServers.add(workServer);</span><br><span class="line">                workServer.start();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"敲回车键退出！\n"</span>);</span><br><span class="line">            <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in)).readLine();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">"Shutting down..."</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> ( WorkServer workServer : workServers )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    workServer.stop();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;               </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> ( ZkClient client : clients )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    client.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>running data 实体类</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shaojun.zookeeper.mastersel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunningData</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">4260577459043203630L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long cid;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getCid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCid</span><span class="params">(Long cid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cid = cid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>工作服务器类:</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shaojun.zookeeper.mastersel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.IZkDataListener;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.ZkClient;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.exception.ZkException;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.exception.ZkInterruptedException;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.exception.ZkNoNodeException;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.exception.ZkNodeExistsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.zookeeper.CreateMode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ScheduledExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WorkServer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">boolean</span> running = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ZkClient zkClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String MASTER_PATH = <span class="string">"/master"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IZkDataListener dataListener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RunningData serverData;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RunningData masterData;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> ScheduledExecutorService delayExector = Executors.newScheduledThreadPool(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> delayTime = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WorkServer</span><span class="params">(RunningData rd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.serverData = rd;</span><br><span class="line">        <span class="keyword">this</span>.dataListener = <span class="keyword">new</span> IZkDataListener() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDataDeleted</span><span class="params">(String dataPath)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                </span><br><span class="line">                <span class="comment">//takeMaster();</span></span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (masterData!=<span class="keyword">null</span> &amp;&amp; masterData.getName().equals(serverData.getName()))&#123;</span><br><span class="line">                    takeMaster();</span><br><span class="line">                    </span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    delayExector.schedule(<span class="keyword">new</span> Runnable()&#123;</span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">                            takeMaster();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, delayTime, TimeUnit.SECONDS);</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDataChange</span><span class="params">(String dataPath, Object data)</span></span><br><span class="line">                    <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ZkClient <span class="title">getZkClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> zkClient;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setZkClient</span><span class="params">(ZkClient zkClient)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.zkClient = zkClient;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (running) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"server has startup..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        running = <span class="keyword">true</span>;</span><br><span class="line">        zkClient.subscribeDataChanges(MASTER_PATH, dataListener);</span><br><span class="line">        takeMaster();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!running) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"server has stoped"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        running = <span class="keyword">false</span>;</span><br><span class="line">        </span><br><span class="line">        delayExector.shutdown();</span><br><span class="line"></span><br><span class="line">        zkClient.unsubscribeDataChanges(MASTER_PATH, dataListener);</span><br><span class="line"></span><br><span class="line">        releaseMaster();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">takeMaster</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!running)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            zkClient.create(MASTER_PATH, serverData, CreateMode.EPHEMERAL);</span><br><span class="line">            masterData = serverData;</span><br><span class="line">            System.out.println(serverData.getName()+<span class="string">" is master"</span>);</span><br><span class="line">            delayExector.schedule(<span class="keyword">new</span> Runnable() &#123;          </span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                    <span class="keyword">if</span> (checkMaster())&#123;</span><br><span class="line">                        releaseMaster();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="number">5</span>, TimeUnit.SECONDS);</span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">catch</span> (ZkNodeExistsException e) &#123;</span><br><span class="line">            RunningData runningData = zkClient.readData(MASTER_PATH, <span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">if</span> (runningData == <span class="keyword">null</span>) &#123;</span><br><span class="line">                takeMaster();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                masterData = runningData;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// ignore;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">releaseMaster</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (checkMaster()) &#123;</span><br><span class="line">            zkClient.delete(MASTER_PATH);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">checkMaster</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            RunningData eventData = zkClient.readData(MASTER_PATH);</span><br><span class="line">            masterData = eventData;</span><br><span class="line">            <span class="keyword">if</span> (masterData.getName().equals(serverData.getName())) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ZkNoNodeException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ZkInterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> checkMaster();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ZkException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="发布/订阅">发布/订阅</h2><p><strong>架构图:</strong><br><img src="https://dn-imjun.qbox.me/2016-07-25 11-17-16.jpg" alt=""><br><strong>Manga Server 流程图:</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-17-48.jpg" alt=""><br><strong>WorkServer 流程图:</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-18-27.jpg" alt=""><br><strong>系统核心类图:</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-19-14.jpg" alt=""><br><strong>代码:</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shaojun.zookeeper.subscribe;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.IZkChildListener;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.IZkDataListener;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.ZkClient;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.exception.ZkNoNodeException;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.exception.ZkNodeExistsException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ManageServer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String serversPath;</span><br><span class="line">    <span class="keyword">private</span> String commandPath;</span><br><span class="line">    <span class="keyword">private</span> String configPath;</span><br><span class="line">    <span class="keyword">private</span> ZkClient zkClient;</span><br><span class="line">    <span class="keyword">private</span> ServerConfig config;</span><br><span class="line">    <span class="keyword">private</span> IZkChildListener childListener;</span><br><span class="line">    <span class="keyword">private</span> IZkDataListener dataListener;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; workServerList;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ManageServer</span><span class="params">(String serversPath, String commandPath,</span><br><span class="line">            String configPath, ZkClient zkClient, ServerConfig config)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.serversPath = serversPath;</span><br><span class="line">        <span class="keyword">this</span>.commandPath = commandPath;</span><br><span class="line">        <span class="keyword">this</span>.zkClient = zkClient;</span><br><span class="line">        <span class="keyword">this</span>.config = config;</span><br><span class="line">        <span class="keyword">this</span>.configPath = configPath;</span><br><span class="line">        <span class="keyword">this</span>.childListener = <span class="keyword">new</span> IZkChildListener() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleChildChange</span><span class="params">(String parentPath,</span><br><span class="line">                    List&lt;String&gt; currentChilds)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                workServerList = currentChilds;</span><br><span class="line">                </span><br><span class="line">                System.out.println(<span class="string">"work server list changed, new list is "</span>);</span><br><span class="line">                execList();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">this</span>.dataListener = <span class="keyword">new</span> IZkDataListener() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDataDeleted</span><span class="params">(String dataPath)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                <span class="comment">// ignore;</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDataChange</span><span class="params">(String dataPath, Object data)</span></span><br><span class="line">                    <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                String cmd = <span class="keyword">new</span> String((<span class="keyword">byte</span>[]) data);</span><br><span class="line">                System.out.println(<span class="string">"cmd:"</span>+cmd);</span><br><span class="line">                exeCmd(cmd);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initRunning</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        zkClient.subscribeDataChanges(commandPath, dataListener);</span><br><span class="line">        zkClient.subscribeChildChanges(serversPath, childListener);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span><br><span class="line">     * 1: list 2: create 3: modify</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">exeCmd</span><span class="params">(String cmdType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"list"</span>.equals(cmdType)) &#123;</span><br><span class="line">            execList();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"create"</span>.equals(cmdType)) &#123;</span><br><span class="line">            execCreate();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"modify"</span>.equals(cmdType)) &#123;</span><br><span class="line">            execModify();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"error command!"</span> + cmdType);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">execList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(workServerList.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">execCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!zkClient.exists(configPath)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                zkClient.createPersistent(configPath, JSON.toJSONString(config)</span><br><span class="line">                        .getBytes());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ZkNodeExistsException e) &#123;</span><br><span class="line">                zkClient.writeData(configPath, JSON.toJSONString(config)</span><br><span class="line">                        .getBytes());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ZkNoNodeException e) &#123;</span><br><span class="line">                String parentDir = configPath.substring(<span class="number">0</span>,</span><br><span class="line">                        configPath.lastIndexOf(<span class="string">'/'</span>));</span><br><span class="line">                zkClient.createPersistent(parentDir, <span class="keyword">true</span>);</span><br><span class="line">                execCreate();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">execModify</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        config.setDbUser(config.getDbUser() + <span class="string">"_modify"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            zkClient.writeData(configPath, JSON.toJSONString(config).getBytes());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ZkNoNodeException e) &#123;</span><br><span class="line">            execCreate();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        initRunning();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        zkClient.unsubscribeChildChanges(serversPath, childListener);</span><br><span class="line">        zkClient.unsubscribeDataChanges(commandPath, dataListener);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>Server Config:</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shaojun.zookeeper.subscribe;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerConfig</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String dbUrl;</span><br><span class="line">    <span class="keyword">private</span> String dbPwd;</span><br><span class="line">    <span class="keyword">private</span> String dbUser;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDbUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dbUrl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDbUrl</span><span class="params">(String dbUrl)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dbUrl = dbUrl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDbPwd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dbPwd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDbPwd</span><span class="params">(String dbPwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dbPwd = dbPwd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDbUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dbUser;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDbUser</span><span class="params">(String dbUser)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dbUser = dbUser;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"ServerConfig [dbUrl="</span> + dbUrl + <span class="string">", dbPwd="</span> + dbPwd</span><br><span class="line">                + <span class="string">", dbUser="</span> + dbUser + <span class="string">"]"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>Server data</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shaojun.zookeeper.subscribe;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerData</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"ServerData [address="</span> + address + <span class="string">", id="</span> + id + <span class="string">", name="</span></span><br><span class="line">                + name + <span class="string">"]"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>订阅发布入口:</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shaojun.zookeeper.subscribe;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.ZkClient;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.serialize.BytesPushThroughSerializer;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubscribeZkClient</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span>  CLIENT_QTY = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String  ZOOKEEPER_SERVER = <span class="string">"192.168.1.105:2181"</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String  CONFIG_PATH = <span class="string">"/config"</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String  COMMAND_PATH = <span class="string">"/command"</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String  SERVERS_PATH = <span class="string">"/servers"</span>;</span><br><span class="line">           </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">        </span>&#123;</span><br><span class="line"></span><br><span class="line">            List&lt;ZkClient&gt;  clients = <span class="keyword">new</span> ArrayList&lt;ZkClient&gt;();</span><br><span class="line">            List&lt;WorkServer&gt;  workServers = <span class="keyword">new</span> ArrayList&lt;WorkServer&gt;();</span><br><span class="line">            ManageServer manageServer = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                ServerConfig initConfig = <span class="keyword">new</span> ServerConfig();</span><br><span class="line">                initConfig.setDbPwd(<span class="string">"123456"</span>);</span><br><span class="line">                initConfig.setDbUrl(<span class="string">"jdbc:mysql://localhost:3306/mydb"</span>);</span><br><span class="line">                initConfig.setDbUser(<span class="string">"root"</span>);</span><br><span class="line">                </span><br><span class="line">                ZkClient clientManage = <span class="keyword">new</span> ZkClient(ZOOKEEPER_SERVER, <span class="number">5000</span>, <span class="number">5000</span>, <span class="keyword">new</span> BytesPushThroughSerializer());</span><br><span class="line">                manageServer = <span class="keyword">new</span> ManageServer(SERVERS_PATH, COMMAND_PATH,CONFIG_PATH,clientManage,initConfig);</span><br><span class="line">                manageServer.start();</span><br><span class="line">                                </span><br><span class="line">                <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; CLIENT_QTY; ++i )</span><br><span class="line">                &#123;</span><br><span class="line">                    ZkClient client = <span class="keyword">new</span> ZkClient(ZOOKEEPER_SERVER, <span class="number">5000</span>, <span class="number">5000</span>, <span class="keyword">new</span> BytesPushThroughSerializer());</span><br><span class="line">                    clients.add(client);</span><br><span class="line">                    ServerData serverData = <span class="keyword">new</span> ServerData();</span><br><span class="line">                    serverData.setId(i);</span><br><span class="line">                    serverData.setName(<span class="string">"WorkServer#"</span>+i);</span><br><span class="line">                    serverData.setAddress(<span class="string">"192.168.1."</span>+i);</span><br><span class="line"></span><br><span class="line">                    WorkServer  workServer = <span class="keyword">new</span> WorkServer(CONFIG_PATH, SERVERS_PATH, serverData, client, initConfig);</span><br><span class="line">                    workServers.add(workServer);</span><br><span class="line">                    workServer.start();                 </span><br><span class="line">                    </span><br><span class="line">                &#125;               </span><br><span class="line">                System.out.println(<span class="string">"敲回车键退出！\n"</span>);</span><br><span class="line">                <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in)).readLine();</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">finally</span></span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">"Shutting down..."</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> ( WorkServer workServer : workServers )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        workServer.stop();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;               </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> ( ZkClient client : clients )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        client.close();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>Work Server 类:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shaojun.zookeeper.subscribe;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.IZkDataListener;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.ZkClient;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.exception.ZkNoNodeException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WorkServer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ZkClient zkClient;</span><br><span class="line">    <span class="keyword">private</span> String configPath;</span><br><span class="line">    <span class="keyword">private</span> String serversPath;</span><br><span class="line">    <span class="keyword">private</span> ServerData serverData;</span><br><span class="line">    <span class="keyword">private</span> ServerConfig serverConfig;</span><br><span class="line">    <span class="keyword">private</span> IZkDataListener dataListener;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WorkServer</span><span class="params">(String configPath, String serversPath,</span><br><span class="line">            ServerData serverData, ZkClient zkClient, ServerConfig initConfig)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.zkClient = zkClient;</span><br><span class="line">        <span class="keyword">this</span>.serversPath = serversPath;</span><br><span class="line">        <span class="keyword">this</span>.configPath = configPath;</span><br><span class="line">        <span class="keyword">this</span>.serverConfig = initConfig;</span><br><span class="line">        <span class="keyword">this</span>.serverData = serverData;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.dataListener = <span class="keyword">new</span> IZkDataListener() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDataDeleted</span><span class="params">(String dataPath)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDataChange</span><span class="params">(String dataPath, Object data)</span></span><br><span class="line">                    <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                String retJson = <span class="keyword">new</span> String((<span class="keyword">byte</span>[])data);</span><br><span class="line">                ServerConfig serverConfigLocal = (ServerConfig)JSON.parseObject(retJson,ServerConfig.class);</span><br><span class="line">                updateConfig(serverConfigLocal);</span><br><span class="line">                System.out.println(<span class="string">"new Work server config is:"</span>+serverConfig.toString());</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"work server start..."</span>);</span><br><span class="line">        initRunning();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"work server stop..."</span>);</span><br><span class="line">        zkClient.unsubscribeDataChanges(configPath, dataListener);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initRunning</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        registMe();</span><br><span class="line">        zkClient.subscribeDataChanges(configPath, dataListener);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">registMe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String mePath = serversPath.concat(<span class="string">"/"</span>).concat(serverData.getAddress());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            zkClient.createEphemeral(mePath, JSON.toJSONString(serverData)</span><br><span class="line">                    .getBytes());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ZkNoNodeException e) &#123;</span><br><span class="line">            zkClient.createPersistent(serversPath, <span class="keyword">true</span>);</span><br><span class="line">            registMe();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updateConfig</span><span class="params">(ServerConfig serverConfig)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.serverConfig = serverConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="负载均衡-1">负载均衡</h2><p><strong>架构图</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-24-14.jpg" alt=""><br><strong>客户端流程</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-24-37.jpg" alt=""><br><strong>服务端主体流程图</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-25-00.jpg" alt=""><br><strong>Server 核心类图</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-25-18.jpg" alt=""><br><strong>代码结构:</strong><br><strong>客户端</strong><br><img src="https://dn-imjun.qbox.me/2016-07-25 11-26-25.jpg" alt=""><br><strong>服务端</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-26-59.jpg" alt=""></p>
<h2 id="命名服务-1">命名服务</h2><p><strong>架构图</strong><br><img src="https://dn-imjun.qbox.me/2016-07-25 11-30-32.jpg" alt=""><br><strong>核心算法</strong><br><img src="https://dn-imjun.qbox.me/2016-07-25 11-30-51.jpg" alt=""><br><strong>代码</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shaojun.zookeeper.nameservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.ZkClient;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.exception.ZkNodeExistsException;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.serialize.BytesPushThroughSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IdMaker</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> ZkClient client = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String server;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String root;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String nodeName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">boolean</span> running = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> ExecutorService cleanExector = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> RemoveMethod&#123;</span><br><span class="line">        NONE,IMMEDIATELY,DELAY</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">IdMaker</span><span class="params">(String zkServer,String root,String nodeName)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">this</span>.root = root;</span><br><span class="line">        <span class="keyword">this</span>.server = zkServer;</span><br><span class="line">        <span class="keyword">this</span>.nodeName = nodeName;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (running)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"server has stated..."</span>);</span><br><span class="line">        running = <span class="keyword">true</span>;</span><br><span class="line">        </span><br><span class="line">        init();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!running)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"server has stopped..."</span>);</span><br><span class="line">        running = <span class="keyword">false</span>;</span><br><span class="line">        </span><br><span class="line">        freeResource();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        client = <span class="keyword">new</span> ZkClient(server,<span class="number">5000</span>,<span class="number">5000</span>,<span class="keyword">new</span> BytesPushThroughSerializer());</span><br><span class="line">        cleanExector = Executors.newFixedThreadPool(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            client.createPersistent(root,<span class="keyword">true</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (ZkNodeExistsException e)&#123;</span><br><span class="line">            <span class="comment">//ignore;</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">freeResource</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">        cleanExector.shutdown();</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            cleanExector.awaitTermination(<span class="number">2</span>, TimeUnit.SECONDS);</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            cleanExector = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> (client!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            client.close();</span><br><span class="line">            client=<span class="keyword">null</span>;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkRunning</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!running)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"请先调用start"</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">ExtractId</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index = str.lastIndexOf(nodeName);</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            index+=nodeName.length();</span><br><span class="line">            <span class="keyword">return</span> index &lt;= str.length()?str.substring(index):<span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">generateId</span><span class="params">(RemoveMethod removeMethod)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        checkRunning();</span><br><span class="line">        <span class="keyword">final</span> String fullNodePath = root.concat(<span class="string">"/"</span>).concat(nodeName);</span><br><span class="line">        <span class="keyword">final</span> String ourPath = client.createPersistentSequential(fullNodePath, <span class="keyword">null</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (removeMethod.equals(RemoveMethod.IMMEDIATELY))&#123;</span><br><span class="line">            client.delete(ourPath);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (removeMethod.equals(RemoveMethod.DELAY))&#123;</span><br><span class="line">            cleanExector.execute(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                    client.delete(ourPath);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//node-0000000000, node-0000000001</span></span><br><span class="line">        <span class="keyword">return</span> ExtractId(ourPath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>测试</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shaojun.zookeeper.nameservice;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestIdMaker</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        </span><br><span class="line">        IdMaker idMaker = <span class="keyword">new</span> IdMaker(<span class="string">"localhost:2181"</span>,</span><br><span class="line">                <span class="string">"/NameService/IdGen"</span>, <span class="string">"ID"</span>);</span><br><span class="line">        idMaker.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                String id = idMaker.generateId(IdMaker.RemoveMethod.DELAY);</span><br><span class="line">                System.out.println(id);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            idMaker.stop();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="分布式队列">分布式队列</h2><p><strong>架构图</strong><br><img src="https://dn-imjun.qbox.me/2016-07-25 11-31-24.jpg" alt=""><br><strong>offer 核心算法</strong><br><img src="https://dn-imjun.qbox.me/2016-07-25 11-31-32.jpg" alt=""><br><strong>poll 核心算法</strong><br><img src="https://dn-imjun.qbox.me/2016-07-25 11-31-40.jpg" alt=""><br><strong>核心代码</strong><br><strong>简单的队列</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shaojun.zookeeper.queue;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.ExceptionUtil;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.ZkClient;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.exception.ZkNoNodeException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DistributedSimpleQueue</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> ZkClient zkClient;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> String root;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> String Node_NAME = <span class="string">"n_"</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DistributedSimpleQueue</span><span class="params">(ZkClient zkClient, String root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.zkClient = zkClient;</span><br><span class="line">        <span class="keyword">this</span>.root = root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> zkClient.getChildren(root).size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> zkClient.getChildren(root).size() == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">offer</span><span class="params">(T element)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        </span><br><span class="line">        String nodeFullPath = root .concat( <span class="string">"/"</span> ).concat( Node_NAME );</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            zkClient.createPersistentSequential(nodeFullPath , element);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (ZkNoNodeException e) &#123;</span><br><span class="line">            zkClient.createPersistent(root);</span><br><span class="line">            offer(element);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> ExceptionUtil.convertToRuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="annotation">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">poll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            List&lt;String&gt; list = zkClient.getChildren(root);</span><br><span class="line">            <span class="keyword">if</span> (list.size() == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Collections.sort(list, <span class="keyword">new</span> Comparator&lt;String&gt;() &#123;</span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(String lhs, String rhs)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> getNodeNumber(lhs, Node_NAME).compareTo(getNodeNumber(rhs, Node_NAME));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span> ( String nodeName : list )&#123;</span><br><span class="line">                </span><br><span class="line">                String nodeFullPath = root.concat(<span class="string">"/"</span>).concat(nodeName);    </span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    T node = (T) zkClient.readData(nodeFullPath);</span><br><span class="line">                    zkClient.delete(nodeFullPath);</span><br><span class="line">                    <span class="keyword">return</span> node;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (ZkNoNodeException e) &#123;</span><br><span class="line">                    <span class="comment">// ignore</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> ExceptionUtil.convertToRuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getNodeNumber</span><span class="params">(String str, String nodeName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index = str.lastIndexOf(nodeName);</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            index += Node_NAME.length();</span><br><span class="line">            <span class="keyword">return</span> index &lt;= str.length() ? str.substring(index) : <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>扩展队列</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shaojun.zookeeper.queue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.IZkChildListener;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.ZkClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CountDownLatch;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DistributedBlockingQueue</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">DistributedSimpleQueue</span>&lt;<span class="title">T</span>&gt;</span>&#123;      </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DistributedBlockingQueue</span><span class="params">(ZkClient zkClient, String root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(zkClient, root);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">poll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">final</span> CountDownLatch    latch = <span class="keyword">new</span> CountDownLatch(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">final</span> IZkChildListener childListener = <span class="keyword">new</span> IZkChildListener() &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleChildChange</span><span class="params">(String parentPath, List&lt;String&gt; currentChilds)</span></span><br><span class="line">                        <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                    latch.countDown();</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            zkClient.subscribeChildChanges(root, childListener);</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                T node = <span class="keyword">super</span>.poll();</span><br><span class="line">                <span class="keyword">if</span> ( node != <span class="keyword">null</span> )&#123;</span><br><span class="line">                    <span class="keyword">return</span> node;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    latch.await();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">                zkClient.unsubscribeChildChanges(root, childListener);</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>测试类</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shaojun.zookeeper.queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.ZkClient;</span><br><span class="line"><span class="keyword">import</span> org.I0Itec.zkclient.serialize.SerializableSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ScheduledExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDistributedBlockingQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        ScheduledExecutorService delayExector = Executors.newScheduledThreadPool(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> delayTime = <span class="number">5</span>;</span><br><span class="line">        </span><br><span class="line">        ZkClient zkClient = <span class="keyword">new</span> ZkClient(<span class="string">"localhost:2181"</span>, <span class="number">5000</span>, <span class="number">5000</span>, <span class="keyword">new</span> SerializableSerializer());</span><br><span class="line">        <span class="keyword">final</span> DistributedBlockingQueue&lt;User&gt; queue = <span class="keyword">new</span> DistributedBlockingQueue&lt;User&gt;(zkClient,<span class="string">"/Queue"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">final</span> User user1 = <span class="keyword">new</span> User();</span><br><span class="line">        user1.setId(<span class="string">"1"</span>);</span><br><span class="line">        user1.setName(<span class="string">"xiao wang"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">final</span> User user2 = <span class="keyword">new</span> User();</span><br><span class="line">        user2.setId(<span class="string">"2"</span>);</span><br><span class="line">        user2.setName(<span class="string">"xiao wang"</span>);     </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            </span><br><span class="line">            delayExector.schedule(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        queue.offer(user1);</span><br><span class="line">                        queue.offer(user2);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, delayTime , TimeUnit.SECONDS);</span><br><span class="line">            </span><br><span class="line">            System.out.println(<span class="string">"ready poll!"</span>);</span><br><span class="line">            User u1 = (User) queue.poll();</span><br><span class="line">            User u2 = (User) queue.poll();</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (user1.getId().equals(u1.getId()) &amp;&amp; user2.getId().equals(u2.getId()))&#123;</span><br><span class="line">                System.out.println(<span class="string">"Success!"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span>&#123;</span><br><span class="line">            delayExector.shutdown();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                delayExector.awaitTermination(<span class="number">2</span>, TimeUnit.SECONDS);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="分布式锁">分布式锁</h2><p><strong>架构图</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-32-54.jpg" alt=""><br><strong>核心算法流程图</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-33-12.jpg" alt=""><br><strong>全局事务锁的相关代码</strong></p>
<p><img src="https://dn-imjun.qbox.me/2016-07-25 11-41-10.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Zookeeper_教程">Zookeeper 教程</h1><hr>
<blockquote>
<p>zookeeper 是一个开源的分布式协调服务，由知名互联网公司雅虎公司创建，是Google Chubby 开源实现。 他致力于提供一个高性能，高可用，且具有严]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[在线工具列表]]></title>
    <link href="http://imjun.me/2016/05/09/%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7%E5%88%97%E8%A1%A8/"/>
    <id>http://imjun.me/2016/05/09/在线工具列表/</id>
    <published>2016-05-09T07:16:51.000Z</published>
    <updated>2016-07-26T15:34:29.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Java源代码搜索">Java源代码搜索</h2><blockquote>
<p><a href="http://grepcode.com/" target="_blank" rel="external">Grepcode</a>是一个面向于Java开发人员的网站，在这里你可以通过Java的projects、classes等各种关键字在线查看它对应的源码，知道对应的project、classes等信息。 更方便的是，能提供非常多不同版本的源码在线查看、jar包、源码jar包、doc的下载。 同样，你也可以之间使用xxx-1.1.1.jar类似这样的名字直接找到对应的jar包，从而下载。</p>
</blockquote>
<p><img src="http://www.hollischuang.com/wp-content/uploads/2016/04/grepcode1-1024x279.png" alt=""></p>
<h2 id="开源代码及文档搜索">开源代码及文档搜索</h2><blockquote>
<p><a href="https://searchcode.com/" target="_blank" rel="external">Searchcode</a>是一个源码搜索引擎，目前支持从 Github、Bitbucket、Google Code、CodePlex、SourceForge 和 Fedora Project 平台搜索公开的源码。</p>
</blockquote>
<p><img src="http://www.hollischuang.com/wp-content/uploads/2016/04/grepcode1-1024x279.png" alt="searchcode"></p>
<h2 id="在线UML制图">在线UML制图</h2><blockquote>
<p><a href="https://www.processon.com/" target="_blank" rel="external">Processon</a>是一个在线协作绘图平台,为用户提供最强大、易用的作图工具!支持在线创作流程图、BPMN、UML图、UI界面原型设计、iOS界面原型设计等。</p>
</blockquote>
<p><img src="http://www.hollischuang.com/wp-content/uploads/2016/04/processon.png" alt=""></p>
<h2 id="Json在线验证及格式化">Json在线验证及格式化</h2><blockquote>
<p>我用过很多json在线格式化的工具，经过实践，<a href="http://json.cn/" target="_blank" rel="external">json.cn</a>是比较不错的，不仅支持json格式的验证及格式化，还可以将json格式压缩成普通文本等好用功能。</p>
</blockquote>
<h2 id="Diff_Check">Diff Check</h2><blockquote>
<p>使用过svn或者git的人对diffcheck肯定不陌生，但有时候我们修改的文本内容并没有被版本控制，那么就可以使用在线的网站查看文件的修改情况。<a href="https://www.diffchecker.com/" target="_blank" rel="external">diffchecker</a>很不错。</p>
</blockquote>
<p><img src="http://www.hollischuang.com/wp-content/uploads/2016/04/differ-1024x612.png" alt=""></p>
<h2 id="MarkDown编辑器">MarkDown编辑器</h2><ul>
<li><a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">Cmd</a></li>
<li><a href="https://segmentfault.com/write?freshman=1" target="_blank" rel="external">segmentfault</a></li>
<li><a href="http://25.io/mou/" target="_blank" rel="external">Mou</a> Mac平台下我的最爱</li>
</ul>
<h2 id="构建工具">构建工具</h2><h3 id="Maven依赖查询">Maven依赖查询</h3><blockquote>
<p><a href="http://mvnrepository.com/" target="_blank" rel="external">mvnrepository</a>这个不用详细解释了，就是查询maven的gav信息一类的。因为我们公司有内部的Nexus仓库，所以很少用这个。</p>
</blockquote>
<p><img src="http://www.hollischuang.com/wp-content/uploads/2016/04/log4j1.png" alt=""></p>
<h3 id="Apache_Maven">Apache Maven</h3><blockquote>
<p><a href="http://maven.apache.org/" target="_blank" rel="external">Apache Maven</a>使用声明进行构建并进行依赖管理，偏向于使用约定而不是配置进行构建。Maven优于Apache Ant。后者采用了一种过程化的方式进行配置，所以维护起来相当困难。</p>
</blockquote>
<h3 id="Gradle">Gradle</h3><blockquote>
<p><a href="http://www.gradle.org/" target="_blank" rel="external">Gradle</a>Gradle采用增量构建。Gradle通过Groovy编程而不是传统的XML声明进行配置。Gradle可以很好地配合Maven进行依赖管理，并且把Ant脚本当作头等公民。</p>
</blockquote>
<h2 id="在线代码运行">在线代码运行</h2><blockquote>
<p><a href="http://tool.lu/coderunner/" target="_blank" rel="external">coderunner</a>可以在线运行php,c,c++,go,python,java,groovy等代码。基本是很少使用。</p>
</blockquote>
<p><img src="http://www.hollischuang.com/wp-content/uploads/2016/04/coderunner-1024x178.png" alt=""></p>
<h2 id="在线翻译">在线翻译</h2><p><a href="https://translate.google.cn/" target="_blank" rel="external">谷歌翻译</a><br><a href="http://fanyi.baidu.com/" target="_blank" rel="external">百度翻译</a><br><a href="http://fanyi.youdao.com/" target="_blank" rel="external">有道翻译</a></p>
<h2 id="SQL自动生成Java代码">SQL自动生成Java代码</h2><blockquote>
<p><a href="http://www.autojcode.com/code/sql2class.jsp" target="_blank" rel="external">AutoJCode</a>可以从sql的建表语句中生成一个DO类。</p>
</blockquote>
<h2 id="json生成java类">json生成java类</h2><p><a href="http://www.bejson.com/json2javapojo/" target="_blank" rel="external">json2java</a></p>
<h2 id="SQL美化/格式化/压缩">SQL美化/格式化/压缩</h2><p><a href="http://tool.lu/sql/" target="_blank" rel="external">sql在线美化，格式化，压缩</a></p>
<h2 id="编码转换">编码转换</h2><p><a href="http://tool.chinaz.com/tools/unicode.aspx" target="_blank" rel="external">编码转换</a>站长工具的编码转换比较全面，提供了Unicode编码、UFT8编码、URL编码/解码等功能。</p>
<h2 id="Corn表达式生成">Corn表达式生成</h2><blockquote>
<p><a href="https://zh.wikipedia.org/zh-sg/Cron" target="_blank" rel="external">Cron</a>一般用于配置定时任务的执行。没有什么特别好的网站，<a href="http://www.pdtools.net/tools/becron.jsp" target="_blank" rel="external">pdtools</a>  还可以吧，基本可以满足需求。</p>
</blockquote>
<p><img src="http://www.hollischuang.com/wp-content/uploads/2016/04/corn.png" alt=""></p>
<h2 id="正则验证">正则验证</h2><blockquote>
<p><a href="http://tool.chinaz.com/tools/regexgenerate" target="_blank" rel="external">站长工具</a>提供的正则代码生成。</p>
</blockquote>
<h2 id="时间戳转换">时间戳转换</h2><blockquote>
<p><a href="https://zh.wikipedia.org/wiki/%E6%99%82%E9%96%93%E6%88%B3" target="_blank" rel="external">时间戳</a> (英语：Timestamp）是指在一连串的资料中加入辨识文字，如时间或日期，用以保障本地端（local）资料更新顺序与远端（remote）一致。</p>
</blockquote>
<p><a href="http://tool.chinaz.com/Tools/unixtime.aspx" target="_blank" rel="external">站长工具</a>提供的时间戳转换。</p>
<h2 id="世界时间转换">世界时间转换</h2><p>世界各地时间转换，我比较常用的是北京时间转纽约时间，北京时间转洛杉矶时间。 timebie提供了世界时间相互转换的功能。</p>
<h2 id="加密解密">加密解密</h2><blockquote>
<p>站长工具中的<a href="http://tool.chinaz.com/tools/textencrypt.aspx" target="_blank" rel="external">加密解密</a></p>
</blockquote>
<h2 id="单位换算">单位换算</h2><blockquote>
<p><a href="http://www.convertworld.com/zh-hans/" target="_blank" rel="external">convertworld</a>是一个比较全的单位换算的网站。我经常用它进行时间单位和货币单位的换算。</p>
</blockquote>
<p><img src="http://www.hollischuang.com/wp-content/uploads/2016/04/convertworld.png" alt="convertworld"></p>
<h2 id="在线调色板">在线调色板</h2><blockquote>
<p><a href="http://tool.chinaz.com/Tools/OnlineColor.aspx" target="_blank" rel="external">在线调色板</a></p>
</blockquote>
<h2 id="常用对照表">常用对照表</h2><ul>
<li><a href="http://tool.oschina.net/commons?type=4" target="_blank" rel="external">ASCII对照表</a></li>
<li><a href="http://tool.oschina.net/commons?type=5" target="_blank" rel="external">HTTP状态码</a></li>
<li><a href="http://tool.oschina.net/commons" target="_blank" rel="external">HTTP Content-type</a></li>
<li><a href="http://tool.oschina.net/commons?type=7" target="_blank" rel="external">TCP/UDP常见端口参考</a></li>
<li><a href="http://tool.oschina.net/commons?type=2" target="_blank" rel="external">HTML转义字符</a></li>
<li><a href="http://tool.oschina.net/commons?type=3" target="_blank" rel="external">RGB颜色参考</a></li>
</ul>
<h2 id="欢迎补充~">欢迎补充~</h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Java源代码搜索">Java源代码搜索</h2><blockquote>
<p><a href="http://grepcode.com/" target="_blank" rel="external">Grepcode</a>是一个面向于Java开发人员的网站]]>
    </summary>
    
      <category term="java" scheme="http://imjun.me/tags/java/"/>
    
      <category term="工具" scheme="http://imjun.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nio文件读写操作]]></title>
    <link href="http://imjun.me/2016/04/12/nio%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C/"/>
    <id>http://imjun.me/2016/04/12/nio文件读写操作/</id>
    <published>2016-04-12T06:25:06.000Z</published>
    <updated>2016-07-26T15:34:29.000Z</updated>
    <content type="html"><![CDATA[<h1 id="NIO">NIO</h1><h2 id="NIO_简介">NIO 简介</h2><p>  nio 是New IO 的简称，在jdk1.4 里提供的新api 。Sun 官方标榜的特性如下： 为所有的原始类型提供(Buffer)缓存支持。字符集编码解码解决方案。 Channel ：一个新的原始I/O 抽象。 支持锁和内存映射文件的文件访问接口。 提供多路(non-bloking) 非阻塞式的高伸缩性网络I/O 。                 – 摘抄<a href="http://baike.baidu.com/link?url=0RUl92U3LPlc5CgZbBAqVtjxbkH-esxau7LX6iEWLtUBESNf7xuDuTbRJ8A3Ruf0LlD_i25c1Bt3N2r_RnMH9zDzqaZ3bgMmMLitEQ8qYfhk_2ZRqmvJW5-gtskoZDi7w9BO7mdHxXybb3KekHpul_" target="_blank" rel="external">百度百科</a></p>
<h2 id="代码">代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.RandomAccessFile;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.FileChannel;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NIO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> bufSize = <span class="number">1000000</span>;<span class="comment">//一次读取的字节长度</span></span><br><span class="line">    File fin = <span class="keyword">new</span> File(<span class="string">"D:\\test\\readFile.txt"</span>);<span class="comment">//读取的文件</span></span><br><span class="line">    File fout = <span class="keyword">new</span> File(<span class="string">"D:\\test\\writeFile.txt"</span>);<span class="comment">//写出的文件</span></span><br><span class="line">    Date startDate = <span class="keyword">new</span> Date();</span><br><span class="line">    FileChannel fcin = <span class="keyword">new</span> RandomAccessFile(fin, <span class="string">"r"</span>).getChannel();</span><br><span class="line">    ByteBuffer rBuffer = ByteBuffer.allocate(bufSize);</span><br><span class="line"></span><br><span class="line">    FileChannel fcout = <span class="keyword">new</span> RandomAccessFile(fout, <span class="string">"rws"</span>).getChannel();</span><br><span class="line">    ByteBuffer wBuffer = ByteBuffer.allocateDirect(bufSize);</span><br><span class="line"></span><br><span class="line">    readFileByLine(bufSize, fcin, rBuffer, fcout, wBuffer);</span><br><span class="line">    Date endDate = <span class="keyword">new</span> Date();</span><br><span class="line">    </span><br><span class="line">    System.out.print(startDate+<span class="string">"|"</span>+endDate);<span class="comment">//测试执行时间</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readFileByLine</span><span class="params">(<span class="keyword">int</span> bufSize, FileChannel fcin,</span><br><span class="line">      ByteBuffer rBuffer, FileChannel fcout, ByteBuffer wBuffer)</span> </span>&#123;</span><br><span class="line">    String enterStr = <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">byte</span>[] bs = <span class="keyword">new</span> <span class="keyword">byte</span>[bufSize];</span><br><span class="line">      <span class="comment">//temp：由于是按固定字节读取，在一次读取中，第一行和最后一行经常是不完整的行，因此定义此变量来存储上次的最后一行和这次的第一行的内容，</span></span><br><span class="line">      <span class="comment">//并将之连接成完成的一行，否则会出现汉字被拆分成2个字节，并被提前转换成字符串而乱码的问题，数组大小应大于文件中最长一行的字节数</span></span><br><span class="line">      <span class="keyword">byte</span>[] temp = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">500</span>];</span><br><span class="line">      <span class="keyword">while</span> (fcin.read(rBuffer) != -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> rSize = rBuffer.position();</span><br><span class="line">        rBuffer.rewind();</span><br><span class="line">        rBuffer.get(bs);</span><br><span class="line">        rBuffer.clear();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//windows下ascii值13、10是换行和回车，unix下ascii值10是换行</span></span><br><span class="line">        <span class="comment">//从开头顺序遍历，找到第一个换行符</span></span><br><span class="line">        <span class="keyword">int</span> startNum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> length=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;rSize;i++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(bs[i]==<span class="number">10</span>)&#123;<span class="comment">//找到换行字符</span></span><br><span class="line">            startNum=i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">500</span>;k++)&#123;</span><br><span class="line">              <span class="keyword">if</span>(temp[k]==<span class="number">0</span>)&#123;<span class="comment">//temp已经存储了上一次读取的最后一行，因此遍历找到空字符位置，继续存储此次的第一行内容，连接成完成一行</span></span><br><span class="line">                length=i+k;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++)&#123;</span><br><span class="line">                  temp[k+j]=bs[j];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将拼凑出来的完整的一行转换成字符串</span></span><br><span class="line">        String tempString1 = <span class="keyword">new</span> String(temp, <span class="number">0</span>, length+<span class="number">1</span>, <span class="string">"GBK"</span>);</span><br><span class="line">        <span class="comment">//清空temp数组</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;temp.length;i++)&#123;</span><br><span class="line">          temp[i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//从末尾倒序遍历，找到第一个换行符</span></span><br><span class="line">        <span class="keyword">int</span> endNum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=rSize-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">          <span class="keyword">if</span>(bs[i]==<span class="number">10</span>)&#123;</span><br><span class="line">            endNum=i;<span class="comment">//记录最后一个换行符的位置</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;rSize;j++)&#123;</span><br><span class="line">              temp[k++]=bs[j];<span class="comment">//将此次读取的最后一行的不完整字节存储在temp数组，用来跟下一次读取的第一行拼接成完成一行</span></span><br><span class="line">              bs[j]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//去掉第一行和最后一行不完整的，将中间所有完整的行转换成字符串</span></span><br><span class="line">        String tempString2 = <span class="keyword">new</span> String(bs, startNum+<span class="number">1</span>, endNum-startNum, <span class="string">"GBK"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//拼接两个字符串</span></span><br><span class="line">        String tempString = tempString1 + tempString2;</span><br><span class="line"><span class="comment">//        System.out.print(tempString);</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> fromIndex = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> endIndex = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((endIndex = tempString.indexOf(enterStr, fromIndex)) != -<span class="number">1</span>) &#123;</span><br><span class="line">          String line = tempString.substring(fromIndex, endIndex)+enterStr;<span class="comment">//按行截取字符串</span></span><br><span class="line">          System.out.print(line);</span><br><span class="line">          <span class="comment">//写入文件</span></span><br><span class="line">          writeFileByLine(fcout, wBuffer, line);</span><br><span class="line"></span><br><span class="line">          fromIndex = endIndex + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 写到文件上</span><br><span class="line">   * <span class="doctag">@param</span> fcout</span><br><span class="line">   * <span class="doctag">@param</span> wBuffer</span><br><span class="line">   * <span class="doctag">@param</span> line</span><br><span class="line">   */</span></span><br><span class="line">  <span class="annotation">@SuppressWarnings</span>(<span class="string">"static-access"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeFileByLine</span><span class="params">(FileChannel fcout, ByteBuffer wBuffer, String line)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      fcout.write(wBuffer.wrap(line.getBytes(<span class="string">"UTF-8"</span>)), fcout.size());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="NIO">NIO</h1><h2 id="NIO_简介">NIO 简介</h2><p>  nio 是New IO 的简称，在jdk1.4 里提供的新api 。Sun 官方标榜的特性如下： 为所有的原始类型提供(Buffer)缓存支持。字符集编码解码解决方案。 Ch]]>
    </summary>
    
      <category term="NIO" scheme="http://imjun.me/tags/NIO/"/>
    
      <category term="java" scheme="http://imjun.me/tags/java/"/>
    
      <category term="java" scheme="http://imjun.me/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我的阅历]]></title>
    <link href="http://imjun.me/2015/12/23/%E6%88%91%E7%9A%84%E9%98%85%E5%8E%86/"/>
    <id>http://imjun.me/2015/12/23/我的阅历/</id>
    <published>2015-12-23T09:17:32.000Z</published>
    <updated>2016-07-26T15:34:29.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<ul>
<li>不读书是瞒不住人的。—— 不如</li>
<li>读书根本无用，但是充满了知道的快乐。—— 微博某 “非”『著』名『程序』猿</li>
<li>书富如入海，百货皆有。人之精力，不能兼收尽取，但得春所欲求者尔。故愿学者每次作一意求之。 —— 苏轼『东坡文集事略』</li>
</ul>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<ul>
<li>不读书是瞒不住人的。—— 不如</li>
<li>读书根本无用，但是充满了知道的快乐。—— 微博某 “非”『著』名『程序』猿</li>
<li>书富如入海，百货皆有。人之精力，不能兼收尽取，但得春所欲求者尔。故愿学者每次作一意求之。 —]]>
    </summary>
    
      <category term="Photo" scheme="http://imjun.me/tags/Photo/"/>
    
      <category term="读书" scheme="http://imjun.me/tags/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="经历" scheme="http://imjun.me/categories/%E7%BB%8F%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swig 模版教程]]></title>
    <link href="http://imjun.me/2015/12/04/Swig-%E6%A8%A1%E7%89%88%E6%95%99%E7%A8%8B/"/>
    <id>http://imjun.me/2015/12/04/Swig-模版教程/</id>
    <published>2015-12-04T03:29:52.000Z</published>
    <updated>2015-12-05T10:37:28.000Z</updated>
    <content type="html"><![CDATA[<h1 id="让我们开始使用_Swig_模版吧！">让我们开始使用 Swig 模版吧！</h1><hr>
<h2 id="API">API</h2><ol>
<li><p>初始化</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">swig.init(&#123;</span><br><span class="line">         allowErrors: <span class="literal">false</span>,   </span><br><span class="line">         autoescape: <span class="literal">true</span>,</span><br><span class="line">         cache: <span class="literal">true</span>,</span><br><span class="line">         encoding: <span class="string">'utf8'</span>,</span><br><span class="line">         filters: &#123;&#125;,</span><br><span class="line">         root: <span class="string">'/'</span>,</span><br><span class="line">         tags: &#123;&#125;,</span><br><span class="line">         extensions: &#123;&#125;,</span><br><span class="line">         tzOffset: <span class="number">0</span></span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>options</p>
<ul>
<li>allowErrors:<br>默认值为 false。将所有模板解析和编译错误直接输出到模板。如果为 true，则将引发错误，抛出到 Node.js 进程中，可能会使您的应用程序崩溃。</li>
<li>autoescape:<br>默认true，强烈建议保持。字符转换表请参阅转义过滤器。<br>true: HTML安全转义<br>false: 不转义，除非使用转义过滤器或者转义标签<br>‘js’: js安全转义</li>
<li>cache:<br>更改为 false 将重新编译每个请求的模板的文件。正式环境建议保持true。</li>
<li>encoding<br>模板文件编码</li>
<li>root<br>需要搜索模板的目录。如果模板传递给 swig.compileFile 绝对路径(以/开头)，Swig不会在模板root中搜索。如果传递一个数组，使用第一个匹配成功的数组项。</li>
<li>tzOffset<br>设置默认时区偏移量。此设置会使转换日期过滤器会自动的修正相应时区偏移量。<br>filters 自定义过滤器或者重写默认过滤器，参见自定义过滤器指南。</li>
<li>tags<br>自定义标签或者重写默认标签，参见自定义标签指南。<br>extensions 添加第三方库，可以在编译模板时使用，参见参见自定义标签指南。</li>
</ul>
</li>
<li><p>NodeJs</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tpl = swig.compileFile(<span class="string">"path/to/template/file.html"</span>);</span><br><span class="line"><span class="keyword">var</span> renderedHtml = tpl.render(&#123; vars: <span class="string">'to be inserted in template'</span> &#125;);</span><br></pre></td></tr></table></figure>
<p> or </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tpl = swig.compile(<span class="string">"Template string here"</span>);</span><br><span class="line"><span class="keyword">var</span> renderedHtml = tpl(&#123; vars: <span class="string">'to be inserted in template'</span> &#125;);</span><br></pre></td></tr></table></figure>
<p> Express</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install express</span><br><span class="line">$ npm install consolidate</span><br></pre></td></tr></table></figure>
<p> Then </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.engine(<span class="string">'.html'</span>, cons.swig);</span><br><span class="line">app.set(<span class="string">'view engine'</span>, <span class="string">'html'</span>);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>浏览器</p>
<blockquote>
<p>Swig浏览器版本的api基本与nodejs版相同，不同点如下：<br>不能使用<code>swig.compileFile</code>，浏览器没有文件系统<br>你必须提前使用<code>swig.compile</code>编译好模板<br>按顺序使用<code>extends</code>, <code>import</code>, and <code>include</code>，同时在<code>swig.compile</code>里使用参数<code>templateKey</code>来查找模板</p>
</blockquote>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">var template = swig.compile('<span class="tag">&lt;<span class="title">p</span>&gt;</span></span><span class="template_tag">&#123;% <span class="keyword">block</span> content %&#125;</span><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">endblock</span> %&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">p</span>&gt;</span>', &#123; filename: 'main' &#125;);</span><br><span class="line">            var mypage = swig.compile('</span><span class="template_tag">&#123;% <span class="keyword">extends</span> "main" %&#125;</span><span class="xml"></span><br><span class="line">                    </span><span class="template_tag">&#123;% <span class="keyword">block</span> content %&#125;</span><span class="xml"></span><br><span class="line">                        Oh hey there!</span><br><span class="line">                    </span><span class="template_tag">&#123;% <span class="keyword">endblock</span> %&#125;</span><span class="xml">',</span><br><span class="line">             &#123; filename: 'mypage' &#125;);</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>基础</p>
<ul>
<li><p>变量<br><code></code><br><code></code></p>
<blockquote>
<p>如果变量未定义，输出空字符。变量可以通过过滤器来修改：<br>  <code>\{\{ name|title \}\}</code> was born on <code>{ { birthday|date(&#39;F jS, Y&#39;) } }</code></p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Jane was born on July 6th, 1985</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>逻辑标签  参见<a href="#tag">标签</a>部分。</p>
</li>
</ul>
<h4 id="注释">注释</h4><h4 id="空白">空白</h4><blockquote>
<p>模板里的空白在最终输出时默认保留，如果需要去掉空白，可以在逻辑标签前后加上空白控制服-：</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> item <span class="keyword">in</span> seq -%&#125;</span><br><span class="line">    &#123;&#123; item &#125;&#125;</span><br><span class="line">&#123;%- endfor %&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="模板继承">模板继承</h3><blockquote>
<p>Swig 使用 extends 和 block 来实现模板继承</p>
</blockquote>
<pre><code><span class="comment"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">layout.html</span><br><span class="line"></span><br><span class="line"><span class="doctype">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>&#123;% block title %&#125;My Site&#123;% endblock %&#125;<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &#123;% block head %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"main.css"</span>&gt;</span></span><br><span class="line">    &#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    &#123;% block content %&#125;&#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line">  `index.html`</span><br><span class="line">  &#123;% extends 'layout.html' %&#125;</span><br><span class="line">  </span><br><span class="line">  &#123;% block title %&#125;My Page&#123;% endblock %&#125;</span><br><span class="line">  </span><br><span class="line">  &#123;% block head %&#125;</span><br><span class="line">  &#123;% parent %&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"custom.css"</span>&gt;</span></span><br><span class="line">  &#123;% endblock %&#125;</span><br><span class="line">  </span><br><span class="line">  &#123;% block content %&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="title">p</span>&gt;</span>This is just an awesome page.<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">  &#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></span>
</code></pre><h3 id="变量过滤器">变量过滤器</h3><pre><code>&gt; 用于修改变量。变量名称后用 | 字符分隔添加过滤器。您可以添加多个过滤器。

  Example

  <span class="comment"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; name|title &#125;&#125; was born on &#123;&#123; birthday|date(<span class="string">'F jS, Y'</span>) &#125;&#125;</span><br><span class="line">and has &#123;&#123; bikes|length|<span class="keyword">default</span>(<span class="string">"zero"</span>) &#125;&#125; bikes.</span><br></pre></td></tr></table></figure></span>


  &gt; 也可以使用 filter 标签来为块内容添加过滤器

  <span class="comment"><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">filter</span> upper %&#125;</span><span class="xml">oh hi, paul</span><span class="template_tag">&#123;% <span class="keyword">endfilter</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></span>
</code></pre><p>  ###内置过滤器<br>  <code>add(value)</code> </p>
<blockquote>
<p>使变量与value相加，可以转换为数值字符串会自动转换为数值。<br>addslashes<br>用 \ 转义字符串<br>   <code>capitalize</code><br>   <strong>大写首字母</strong><br>   <code>date(format[, tzOffset])</code><br>  <strong>转换日期为指定格式</strong><br>  <code>format</code>： 格式<br>  <code>tzOffset</code>： 时区<br>  <code>default(value)</code><br>  默认值（如果变量为<code>undefined</code>，<code>null</code>，<code>false</code>）<br>  <code>e</code> 同<code>escape</code><br>  <code>escape([type])</code><br>  <strong>转义字符</strong><br>  默认： <code>&amp;</code>,<code>&lt;</code>, <code>&gt;</code>,<code>&quot;</code>,<code>&#39;</code><br>  <code>js</code>: <code>&amp;</code>,<code>&lt;</code>,<code>&gt;</code>,<code>&quot;</code>, <code>&#39;</code>, <code>=</code>,<code>-</code>,<code>;</code><br>  <code>first</code><br>  返回数组第一个值<br>  <code>join(glue)</code><br>  同<code>[].join</code><br>  <code>json_encode([indent])</code><br>  类似<code>JSON.stringify, indent</code>为缩进空格数<br>  <code>last</code><br>  返回数组最后一个值<br>  <code>length</code><br>  返回变量的length，如果是object，返回key的数量<br>  <code>lower</code><br>  同’’.toLowerCase()<br>  <code>raw</code><br>  指定输入不会被转义<br>  <code>replace(search, replace[, flags])</code><br>  同’’.replace<br>  <code>reverse</code><br>  翻转数组<br>  <code>striptags</code><br>  去除<code>html/xml</code>标签<br>  <code>title</code><br>  大写首字母<br>  <code>uniq</code><br>  数组去重<br>  <code>upper</code><br>  同<code>&#39;&#39;.toUpperCase</code><br>  <code>url_encode</code><br>  同<code>encodeURIComponent</code><br>  <code>url_decode</code><br>  同<code>decodeURIComponemt</code><br>  <strong>自定义过滤器</strong><br>  创建一个 myfilter.js 然后引入到 Swig 的初始化函数中<br>  <code>swig.init({ filters: require(&#39;myfilters&#39;) });</code><br>  在<code>myfilter.js</code> 里，每一个 <code>filter</code>方法都是一个简单的<code>js</code>方法，下例是一个翻转字符串的 filter：</p>
</blockquote>
  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exports.myfilter = <span class="function"><span class="keyword">function</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> input.toString().split(<span class="string">''</span>).reverse().join(<span class="string">''</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>你的 <code>filter</code>一旦被引入，你就可以向下面一样使用：<br>  <code>{ { name|myfilter } }</code><br>  <code>{ % filter myfilter % }I shall be filtered{ % endfilter % }</code><br>   你也可以像下面一样给 filter 传参数：</p>
</blockquote>
  <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exports.<span class="keyword">prefix</span> = function(input, <span class="keyword">prefix</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">prefix</span>.<span class="built_in">toString</span>() + input.<span class="built_in">toString</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>  <code>{ { name|prefix(&#39;my prefix&#39;) } }</code></p>
<pre><code><span class="escape">`{</span> <span class="var_expand">% filter prefix 'my prefix' %</span>}I will be prefixed with <span class="string">"my prefix"</span>.   { <span class="var_expand">% endfilter %</span> }<span class="escape">`
</span>  <span class="escape">`{</span> <span class="var_expand">% filter prefix foo %</span> }<span class="escape">`I</span> will be prefixed with the value stored to <span class="escape">`f</span>oo<span class="escape">`.</span><span class="escape">`{</span> <span class="var_expand">% endfilter %</span> }`
</code></pre><h2 id="标签"><a id="tag" href=":;">标签</a></h2><h3 id="内置标签">内置标签</h3><ul>
<li>extends<br>使当前模板继承父模板，必须在文件最前<ul>
<li>参数： </li>
<li>file:<br>父模板相对模板 root 的相对路径</li>
</ul>
</li>
<li>block<br>定义一个块，使之可以被继承的模板重写，或者重写父模板的同名块<ul>
<li>参数： </li>
<li>name:<br>块的名字，必须以字母数字下划线开头</li>
</ul>
</li>
<li>parent<br>将父模板中同名块注入当前块中</li>
<li>include<br>包含一个模板到当前位置，这个模板将使用当前上下文<ul>
<li>参数： </li>
<li>file:<br>包含模板相对模板 root 的相对路径 </li>
</ul>
</li>
<li>ignore missing:<br>包含模板不存在也不会报错 </li>
<li>with x:<br>设置 x 至根上下文对象以传递给模板生成。必须是一个键值对 </li>
<li><p>only:<br>限制模板上下文中用 with x 定义的参数</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">  &#123; % include template_path % &#125;</span><br><span class="line">  &#123; % include "path/to/template.js" % &#125; </span><br><span class="line">  //你可以标记 ignore missing，这样如果模板不存在，也不会抛出错误</span><br><span class="line">  &#123; % include "foobar.html" ignore missing % &#125;</span><br><span class="line">  //本地声明的上下文变量，默认情况不会传递给包含的模板。例如以下情况，inc.html 无法得到 foo 和 bar</span><br><span class="line">  &#123;% set foo = "bar" %&#125;</span><br><span class="line">  &#123; % include "inc.html" % &#125;</span><br><span class="line">  </span><br><span class="line">    &#123;% for bar in thing %&#125;</span><br><span class="line">     &#123; % include "inc.html" % &#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">  //如果想把本地声明的变量引入到包含的模板种，可以使用 with 参数来把后面的对象创建到包含模板的上下文中</span><br><span class="line">  &#123;% set foo = &#123; bar: "baz" &#125; %&#125;</span><br><span class="line">  &#123; % include "inc.html" with foo % &#125;</span><br><span class="line">  </span><br><span class="line">  &#123;% for bar in thing %&#125;</span><br><span class="line">      &#123; % include "inc.html" with bar % &#125;</span><br><span class="line">  &#123;% endfor %&#125;    </span><br><span class="line">```         </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &gt; 如果当前上下文中 foo 和 bar 可用，下面的情况中，只有 foo 会被 inc.html 定义</span><br><span class="line">  `&#123; %  `include` "inc.html" with foo only % &#125;`</span><br><span class="line">  `only` </span><br><span class="line">    必须作为最后一个参数，放在其他位置会被忽略</span><br><span class="line">  **raw** </span><br><span class="line">    停止解析标记中任何内容，所有内容都将输出</span><br><span class="line">  参数:</span><br><span class="line">  **file:** </span><br><span class="line">     父模板相对模板 root 的相对路径</span><br><span class="line">  **for** </span><br><span class="line">     遍历对象和数组</span><br><span class="line">  参数:</span><br><span class="line">      x: 当前循环迭代名 </span><br><span class="line">     in: 语法标记 </span><br><span class="line">      y: 可迭代对象。可以使用过滤器修改</span><br><span class="line"></span><br><span class="line">  ``` js</span><br><span class="line">  &#123;% for x in y %&#125;</span><br><span class="line">      &#123;% if loop.first %&#125;&lt;ul&gt;&#123;% endif %&#125;</span><br><span class="line">      &lt;li&gt;&#123;&#123; loop.index &#125;&#125; - &#123;&#123; loop.key &#125;&#125;: &#123;&#123; x &#125;&#125;&lt;/li&gt;</span><br><span class="line">      &#123;% if loop.last %&#125;&lt;/ul&gt;&#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>
<p><strong>特殊循环变量</strong> </p>
<blockquote>
<p>loop.index：当前循环的索引（1开始）<br>  loop.index0：当前循环的索引（0开始）<br>  loop.revindex：当前循环从结尾开始的索引（1开始）<br>  loop.revindex0：当前循环从结尾开始的索引（0开始）<br>  loop.key：如果迭代是对象，是当前循环的键，否则同 loop.index<br>  loop.first：如果是第一个值返回 true<br>  loop.last：如果是最后一个值返回 true<br>  loop.cycle：一个帮助函数，以指定的参数作为周期</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for item in items %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"&#123;&#123; loop.cycle('odd', 'even') &#125;&#125;"</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">在 for 标签里使用 else</span><br><span class="line">&#123;% for person in people %&#125;</span><br><span class="line">    &#123;&#123; person &#125;&#125;</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">    There are no people yet!</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>
<p><code>if</code> 条件语句 </p>
<blockquote>
<p>参数：  接受任何有效的 JavaScript 条件语句，以及一些其他人类可读语法</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">  &#123;% <span class="keyword">if</span> x %&#125;&#123;% endif %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> !x %&#125;&#123;% endif %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> not x %&#125;&#123;% endif %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> x and y %&#125;&#123;% endif %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> x &amp;&amp; y %&#125;&#123;% endif %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> x or y %&#125;&#123;% endif %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> x || y %&#125;&#123;% endif %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> x || (y &amp;&amp; z) %&#125;&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% <span class="keyword">if</span> x [operator] y %&#125;</span><br><span class="line">    Operators: ==, !=, <span class="xml"><span class="tag">&lt;<span class="title">,</span> &lt;=<span class="value">,</span> &gt;</span>, &gt;=, ===, !==</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if x == 'five' %&#125;</span><br><span class="line">    The operands can be also be string or number literals</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if x|length === 3 %&#125;</span><br><span class="line">    You can use filters on any operand in the statement.</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if x in y %&#125;</span><br><span class="line">    If x is a value that is present in y, this will return true.</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">else 和 else if</span><br><span class="line">&#123;% if foo %&#125;</span><br><span class="line">    Some content.</span><br><span class="line">&#123;% else if "foo" in bar %&#125;</span><br><span class="line">    Content if the array `bar` has "foo" in it.</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">    Fallback content.</span><br><span class="line">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>
<p><code>autoescape</code>  改变当前变量的自动转义行为</p>
<p>参数： </p>
<ul>
<li>on:当前内容是否转义</li>
<li>type: 转义类型，js 或者 html，默认 html</li>
<li>假设 some_html_output = ‘<p>Hello “you” &amp; \’them\’</p>‘;</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;% autoescape false %&#125;</span><br><span class="line">    &#123;&#123; some_html_output &#125;&#125;</span><br><span class="line">&#123;% endautoescape %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% autoescape true %&#125;</span><br><span class="line">    &#123;&#123; some_html_output &#125;&#125;</span><br><span class="line">&#123;% endautoescape %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% autoescape true "js" %&#125;</span><br><span class="line">    &#123;&#123; some_html_output &#125;&#125;</span><br><span class="line">&#123;% endautoescape %&#125;</span><br><span class="line">将会输出</span><br><span class="line">&lt;p&gt;Hello "you" &amp; 'them'&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&amp;lt;p&amp;gt;Hello &amp;quot;you&amp;quot; &amp;amp; &amp;#39;them&amp;#39; &amp;lt;/p&amp;gt;</span><br><span class="line"></span><br><span class="line">\u003Cp\u003EHello \u0022you\u0022 &amp; \u0027them\u0027\u003C\u005Cp\u003E</span><br></pre></td></tr></table></figure>
<p><code>set</code> 设置一个变量，在当前上下文中复用</p>
<blockquote>
<p>参数： </p>
<pre><code><span class="escape">`n</span>ame<span class="escape">`:</span> 变量名 =: 语法标记 
<span class="escape">`v</span>alue<span class="escape">`:</span> 变量值
</code></pre></blockquote>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template_tag">&#123;% set foo = [0, 1, 2, 3, 4, 5] %&#125;</span><span class="xml"></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">for</span> num <span class="keyword">in</span> foo %&#125;</span><span class="xml"></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span>&gt;</span></span><span class="variable">&#123;&#123; num &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">endfor</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>  <code>macro</code> </p>
<blockquote>
<p>创建自定义可服用的代码段<br>  <strong>参数</strong>：<br>…:<br>    用户定义</p>
</blockquote>
  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% macro input type name id label value error %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="title">label</span> <span class="attribute">for</span>=<span class="value">"&#123;&#123; name &#125;&#125;"</span>&gt;</span>&#123;&#123; label &#125;&#125;<span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"&#123;&#123; type &#125;&#125;"</span> <span class="attribute">name</span>=<span class="value">"&#123;&#123; name &#125;&#125;"</span> <span class="attribute">id</span>=<span class="value">"&#123;&#123; id &#125;&#125;"</span> <span class="attribute">value</span>=<span class="value">"&#123;&#123; value &#125;&#125;"</span><span class="value">&#123;%</span> <span class="attribute">if</span> <span class="attribute">error</span> %&#125; <span class="attribute">class</span>=<span class="value">"error"</span><span class="value">&#123;%</span> <span class="attribute">endif</span> %&#125;&gt;</span></span><br><span class="line">&#123;% endmacro %&#125;</span><br><span class="line">然后像下面使用</span><br><span class="line"><span class="tag">&lt;<span class="title">div</span>&gt;</span>&#123;&#123; input("text", "fname", "fname", "First Name", fname.value, fname.errors) &#125;&#125;<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span>&gt;</span>&#123;&#123; input("text", "lname", "lname", "Last Name", lname.value, lname.errors) &#125;&#125;<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">输出如下</span><br><span class="line"><span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">label</span> <span class="attribute">for</span>=<span class="value">"fname"</span>&gt;</span>First Name<span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">name</span>=<span class="value">"fname"</span> <span class="attribute">id</span>=<span class="value">"fname"</span> <span class="attribute">value</span>=<span class="value">"Paul"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">label</span> <span class="attribute">for</span>=<span class="value">"lname"</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">name</span>=<span class="value">"lname"</span> <span class="attribute">id</span>=<span class="value">"lname"</span> <span class="attribute">value</span>=<span class="value">""</span> <span class="attribute">class</span>=<span class="value">"error"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>  <code>import</code></p>
<blockquote>
<p>允许引入另一个模板的宏进入当前上下文<br>参数：<br><code>file</code>:<br>引入模板相对模板 root 的相对路径<br>  as:<br>语法标记 var: 分配给宏的可访问上下文对象</p>
</blockquote>
  <figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="collection">&#123;% import 'formmacros.html' as form %&#125;</span></span><br><span class="line">  </span><br><span class="line"><span class="collection">&#123;# this will run the input macro #&#125;</span></span><br><span class="line"><span class="collection">&#123;<span class="collection">&#123; form.input<span class="list">(<span class="string">"text"</span>, <span class="string">"name"</span>)</span> &#125;</span>&#125;</span></span><br><span class="line">  </span><br><span class="line"><span class="collection">&#123;# this, however, will NOT output anything because the macro is scoped to the <span class="string">"form"</span> object: #&#125;</span></span><br><span class="line"><span class="collection">&#123;<span class="collection">&#123; input<span class="list">(<span class="string">"text"</span>, <span class="string">"name"</span>)</span> &#125;</span>&#125;</span></span><br></pre></td></tr></table></figure>
<p>  <strong>filter</strong> </p>
<blockquote>
<p>对整个块应用过滤器<br>  参数：<br>  <strong>filter_name:</strong><br>过滤器名字 … :<br>  若干传给过滤器的参数 父模板相对模板 root 的相对路径</p>
</blockquote>
  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% filter uppercase % &#125;oh hi, &#123;&#123; name &#125;&#125;&#123; % endfilter % &#125;&#10;&#123;% filter replace &#34;.&#34; &#34;!&#34; &#34;g&#34; % &#125;Hi. My name is Paul.&#123; % endfilter % &#125;</span><br></pre></td></tr></table></figure>
<p>输出<br><code>// OH HI, PAUL
// Hi! My name is Paul!</code><br><code>//spaceless</code><br>//尝试移除html标签间的空格</p>
  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% spaceless %&#125;&#10;&#123;% for num in foo %&#125;&#10;    &#60;li&#62;&#123;&#123; loop.index &#125;&#125;&#60;/li&#62;&#10;&#123;% endfor %&#125;&#10;&#123;% endspaceless %&#125;</span><br></pre></td></tr></table></figure>
  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">li</span>&gt;</span>1<span class="tag">&lt;/<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">li</span>&gt;</span>2<span class="tag">&lt;/<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">li</span>&gt;</span>3<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意： 这里面为了一些标签和函数避免解析时报错，所以我修改了下。请用的时候记得修复它 ，谢谢！</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="让我们开始使用_Swig_模版吧！">让我们开始使用 Swig 模版吧！</h1><hr>
<h2 id="API">API</h2><ol>
<li><p>初始化</p>
<figure class="highlight javascript"><table><]]>
    </summary>
    
      <category term="javascript" scheme="http://imjun.me/tags/javascript/"/>
    
      <category term="nodeJs" scheme="http://imjun.me/tags/nodeJs/"/>
    
      <category term="swig" scheme="http://imjun.me/tags/swig/"/>
    
      <category term="前端" scheme="http://imjun.me/categories/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[简单美观的文字标签云组件]]></title>
    <link href="http://imjun.me/2015/12/03/beautiful-word-cloud/"/>
    <id>http://imjun.me/2015/12/03/beautiful-word-cloud/</id>
    <published>2015-12-03T14:10:40.000Z</published>
    <updated>2015-12-07T14:08:14.000Z</updated>
    <content type="html"><![CDATA[<p>  </p>
  <div class="entry">

<p>经常在微博或微信的文章中看到漂亮的分析图。我认为在大数据的时代，目前最关键的就是如何让非专业人员轻松的进行数据分析，比如可以象使用office一样制作信息图（infographic），而不是用专业的制图工具。这一步跨过去，看到的将是欣欣向荣的真正大数据时代。</p>
<p>而这之前，首先缺少的就是，可以让普通开发人员使用的大数据时代的可视化图表组件，比如标签云图，所幸，业界已经有<a href="http://github.com/ecomfe/echarts" target="_blank" rel="external">ECharts</a>和<a href="http://github.com/timdream/wordcloud" target="_blank" rel="external">WordCloud</a>这两大利器，本文只介绍后者。</p>
<p><img src="http://bruce.u.qiniudn.com/2014/02/10/wordcloud-cn.jpg" alt="中文"></p>
<p><a id="more"></a></p>
<p>首先页面必须是html5编写。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">“UTF-8”</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">title</span>&gt;</span><span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="title">body</span>&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>引入<a href="http://jquery.com/" target="_blank" rel="external">jQuery</a>和<a href="http://github.com/timdream/wordcloud2.js" target="_blank" rel="external">WordCloud2.js</a>。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">“src/wordcloud2.js”</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">“//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js”</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>定义canvas容器。</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">&lt;<span class="tag">div</span> id=<span class="string">“canvas-container”</span> align=<span class="string">“center”</span>&gt;</span><br><span class="line"> &lt;<span class="tag">canvas</span> id=<span class="string">“canvas”</span> <span class="attribute">width</span>=<span class="string">“800px”</span> <span class="attribute">height</span>=<span class="string">“600px”</span>&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>绘图。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="prolog"> </span><br><span class="line"><span class="atom">var</span> <span class="atom">options</span> = <span class="atom">eval</span>(&#123;</span><br><span class="line">  <span class="string">“list”</span>: [[<span class="string">‘傻猎豹’</span>, <span class="number">10</span>], [<span class="string">‘不如’</span>, <span class="number">9</span>], [<span class="string">‘麻花疼’</span>, <span class="number">7</span>], [<span class="string">‘麻云’</span>, <span class="number">6</span>],[<span class="string">‘李眼红’</span>, <span class="number">4</span>], [<span class="string">‘雷布斯’</span>, <span class="number">5</span>],[<span class="string">‘周红衣’</span>, <span class="number">4</span>],[<span class="string">‘刘墙洞’</span>, <span class="number">3</span>],[<span class="string">‘李国情’</span>, <span class="number">3</span>]],</span><br><span class="line">  <span class="string">“gridSize”</span>: <span class="number">8</span>,</span><br><span class="line">  <span class="string">“weightFactor”</span>: <span class="number">16</span>,</span><br><span class="line">  <span class="string">“fontFamily”</span>: <span class="string">‘Hiragino Mincho Pro, serif’</span>,</span><br><span class="line">  <span class="string">“color”</span>: <span class="string">‘random-dark’</span>,</span><br><span class="line">  <span class="string">“backgroundColor”</span>: <span class="string">‘#f0f0f0’</span>,</span><br><span class="line">  <span class="string">“rotateRatio”</span>: <span class="number">0</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="atom">var</span> <span class="atom">canvas</span> = <span class="atom">document</span>.<span class="atom">getElementById</span>(<span class="string">‘canvas’</span>);</span><br><span class="line"></span><br><span class="line"><span class="name">WordCloud</span>(<span class="atom">canvas</span>, <span class="atom">options</span>);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br>&gt; 至此，全部完毕。执行页面，美丽的云图便展现在你面前，具体的API可以参考<a href="http://github.com/timdream/wordcloud2.js/blob/master/API.md" target="_blank" rel="external">这里</a>。<br><br>下面举个英文的例子，为了美观稍微改变一下参数：<br><br><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line"><span class="string">“list”</span>: [[<span class="string">‘bruce-sha’</span>, <span class="number">10</span>], [<span class="string">‘buru’</span>, <span class="number">9</span>], [<span class="string">‘tencent’</span>, <span class="number">7</span>], [<span class="string">‘alibaba’</span>, <span class="number">6</span>], [<span class="string">‘baidu’</span>, <span class="number">4</span>], [<span class="string">‘xiaomi’</span>, <span class="number">5</span>],[<span class="string">‘360’</span>, <span class="number">4</span>],[<span class="string">‘jingdong’</span>, <span class="number">3</span>],[<span class="string">‘dangdang’</span>, <span class="number">3</span>],[<span class="string">‘ibruce.info’</span>, <span class="number">1</span>]],</span><br><span class="line"><span class="string">“gridSize”</span>: <span class="number">16</span>,</span><br><span class="line"><span class="string">“weightFactor”</span>: <span class="number">16</span>,</span><br><span class="line"><span class="string">“fontFamily”</span>: <span class="string">‘Times, serif’</span>,</span><br><span class="line"><span class="string">“color”</span>: <span class="string">‘random-light’</span>,</span><br><span class="line"><span class="string">“backgroundColor”</span>: <span class="string">‘#333’</span>,</span><br><span class="line"><span class="string">“rotateRatio”</span>: <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p><img src="http://bruce.u.qiniudn.com/2014/02/10/wordcloud-en.jpg" alt="英文"></p>
</div>]]></content>
    <summary type="html">
    <![CDATA[<p>  </p>
  <div class="entry">

<p>经常在微博或微信的文章中看到漂亮的分析图。我认为在大数据的时代，目前最关键的就是如何让非专业人员轻松的进行数据分析，比如可以象使用office一样制作信息图（infographic），而不是用专业的制图工具。]]>
    </summary>
    
      <category term="WordCloud" scheme="http://imjun.me/tags/WordCloud/"/>
    
      <category term="javascript" scheme="http://imjun.me/tags/javascript/"/>
    
      <category term="前端" scheme="http://imjun.me/categories/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
